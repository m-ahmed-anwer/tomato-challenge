/// <reference types="react" />
declare const _default: {
    title: string;
    background: string;
    color: string;
    buttons: {
        twitter: any;
        messenger: any;
        facebook: any;
        github: any;
        linkedin: any;
        whatsapp: any;
        reddit: any;
        pinterest: any;
        youtube: any;
        primary: {
            backgroundColor: string;
            backgroundDarker: string;
            backgroundPlaceholder: string;
            textColor: string;
            backgroundProgress: string;
            activityColor?: string | undefined;
            activeOpacity?: number | undefined;
            animatedPlaceholder?: boolean | undefined;
            backgroundActive?: string | undefined;
            backgroundShadow?: string | undefined;
            borderColor?: string | undefined;
            borderRadius?: number | undefined;
            borderBottomLeftRadius?: number | undefined;
            borderBottomRightRadius?: number | undefined;
            borderTopLeftRadius?: number | undefined;
            borderTopRightRadius?: number | undefined;
            debouncedPressTime?: number | undefined;
            borderLeftBottomRadius?: number | undefined;
            borderWidth?: number | undefined;
            progressLoadingTime?: number | undefined;
            extra?: any;
            disabled?: boolean | undefined;
            height?: number | undefined;
            hitSlop?: number | import("react-native").Insets | null | undefined;
            paddingHorizontal?: number | undefined;
            paddingTop?: number | undefined;
            progress?: boolean | undefined;
            before?: import("react").ReactNode;
            dangerouslySetPressableProps?: import("react-native").PressableProps | undefined;
            after?: import("react").ReactNode;
            paddingBottom?: number | undefined;
            raiseLevel?: number | undefined;
            springRelease?: boolean | undefined;
            stretch?: boolean | undefined;
            style?: any;
            textFontFamily?: string | undefined;
            textLineHeight?: number | undefined;
            textSize?: number | undefined;
            width?: number | null | undefined;
            children?: import("react").ReactNode;
            onPress?: ((callback?: (() => void) | undefined) => void) | undefined;
            onLongPress?: ((event: import("react-native").GestureResponderEvent) => void) | null | undefined;
            onPressIn?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressOut?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressedIn?: (() => void) | undefined;
            onPressedOut?: (() => void) | undefined;
            onProgressStart?: (() => void) | undefined;
            onProgressEnd?: (() => void) | undefined;
        };
        secondary: {
            backgroundColor: string;
            backgroundDarker: string;
            backgroundActive: string;
            backgroundPlaceholder: string;
            textColor: string;
            backgroundProgress: string;
            borderWidth: number;
            borderColor: string;
            activityColor: string;
            activeOpacity?: number | undefined;
            animatedPlaceholder?: boolean | undefined;
            backgroundShadow?: string | undefined;
            borderRadius?: number | undefined;
            borderBottomLeftRadius?: number | undefined;
            borderBottomRightRadius?: number | undefined;
            borderTopLeftRadius?: number | undefined;
            borderTopRightRadius?: number | undefined;
            debouncedPressTime?: number | undefined;
            borderLeftBottomRadius?: number | undefined;
            progressLoadingTime?: number | undefined;
            extra?: any;
            disabled?: boolean | undefined;
            height?: number | undefined;
            hitSlop?: number | import("react-native").Insets | null | undefined;
            paddingHorizontal?: number | undefined;
            paddingTop?: number | undefined;
            progress?: boolean | undefined;
            before?: import("react").ReactNode;
            dangerouslySetPressableProps?: import("react-native").PressableProps | undefined;
            after?: import("react").ReactNode;
            paddingBottom?: number | undefined;
            raiseLevel?: number | undefined;
            springRelease?: boolean | undefined;
            stretch?: boolean | undefined;
            style?: any;
            textFontFamily?: string | undefined;
            textLineHeight?: number | undefined;
            textSize?: number | undefined;
            width?: number | null | undefined;
            children?: import("react").ReactNode;
            onPress?: ((callback?: (() => void) | undefined) => void) | undefined;
            onLongPress?: ((event: import("react-native").GestureResponderEvent) => void) | null | undefined;
            onPressIn?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressOut?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressedIn?: (() => void) | undefined;
            onPressedOut?: (() => void) | undefined;
            onProgressStart?: (() => void) | undefined;
            onProgressEnd?: (() => void) | undefined;
        };
        anchor: {
            backgroundColor: string;
            backgroundDarker: string;
            backgroundProgress: string | null;
            textColor: string;
            borderColor: string;
            activityColor: string;
            borderWidth: number;
            activeOpacity?: number | undefined;
            animatedPlaceholder?: boolean | undefined;
            backgroundActive?: string | undefined;
            backgroundPlaceholder?: string | undefined;
            backgroundShadow?: string | undefined;
            borderRadius?: number | undefined;
            borderBottomLeftRadius?: number | undefined;
            borderBottomRightRadius?: number | undefined;
            borderTopLeftRadius?: number | undefined;
            borderTopRightRadius?: number | undefined;
            debouncedPressTime?: number | undefined;
            borderLeftBottomRadius?: number | undefined;
            progressLoadingTime?: number | undefined;
            extra?: any;
            disabled?: boolean | undefined;
            height?: number | undefined;
            hitSlop?: number | import("react-native").Insets | null | undefined;
            paddingHorizontal?: number | undefined;
            paddingTop?: number | undefined;
            progress?: boolean | undefined;
            before?: import("react").ReactNode;
            dangerouslySetPressableProps?: import("react-native").PressableProps | undefined;
            after?: import("react").ReactNode;
            paddingBottom?: number | undefined;
            raiseLevel?: number | undefined;
            springRelease?: boolean | undefined;
            stretch?: boolean | undefined;
            style?: any;
            textFontFamily?: string | undefined;
            textLineHeight?: number | undefined;
            textSize?: number | undefined;
            width?: number | null | undefined;
            children?: import("react").ReactNode;
            onPress?: ((callback?: (() => void) | undefined) => void) | undefined;
            onLongPress?: ((event: import("react-native").GestureResponderEvent) => void) | null | undefined;
            onPressIn?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressOut?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressedIn?: (() => void) | undefined;
            onPressedOut?: (() => void) | undefined;
            onProgressStart?: (() => void) | undefined;
            onProgressEnd?: (() => void) | undefined;
        };
        danger: {
            backgroundColor: string;
            backgroundDarker: string;
            backgroundProgress: string;
            textColor: string;
            borderColor: string;
            borderWidth: number;
            activityColor: string;
            activeOpacity?: number | undefined;
            animatedPlaceholder?: boolean | undefined;
            backgroundActive?: string | undefined;
            backgroundPlaceholder?: string | undefined;
            backgroundShadow?: string | undefined;
            borderRadius?: number | undefined;
            borderBottomLeftRadius?: number | undefined;
            borderBottomRightRadius?: number | undefined;
            borderTopLeftRadius?: number | undefined;
            borderTopRightRadius?: number | undefined;
            debouncedPressTime?: number | undefined;
            borderLeftBottomRadius?: number | undefined;
            progressLoadingTime?: number | undefined;
            extra?: any;
            disabled?: boolean | undefined;
            height?: number | undefined;
            hitSlop?: number | import("react-native").Insets | null | undefined;
            paddingHorizontal?: number | undefined;
            paddingTop?: number | undefined;
            progress?: boolean | undefined;
            before?: import("react").ReactNode;
            dangerouslySetPressableProps?: import("react-native").PressableProps | undefined;
            after?: import("react").ReactNode;
            paddingBottom?: number | undefined;
            raiseLevel?: number | undefined;
            springRelease?: boolean | undefined;
            stretch?: boolean | undefined;
            style?: any;
            textFontFamily?: string | undefined;
            textLineHeight?: number | undefined;
            textSize?: number | undefined;
            width?: number | null | undefined;
            children?: import("react").ReactNode;
            onPress?: ((callback?: (() => void) | undefined) => void) | undefined;
            onLongPress?: ((event: import("react-native").GestureResponderEvent) => void) | null | undefined;
            onPressIn?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressOut?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressedIn?: (() => void) | undefined;
            onPressedOut?: (() => void) | undefined;
            onProgressStart?: (() => void) | undefined;
            onProgressEnd?: (() => void) | undefined;
        };
        disabled: {
            backgroundColor: string;
            backgroundDarker: string;
            textColor: string;
            borderWidth: number;
            borderColor: string;
            activityColor?: string | undefined;
            activeOpacity?: number | undefined;
            animatedPlaceholder?: boolean | undefined;
            backgroundActive?: string | undefined;
            backgroundPlaceholder?: string | undefined;
            backgroundProgress?: string | undefined;
            backgroundShadow?: string | undefined;
            borderRadius?: number | undefined;
            borderBottomLeftRadius?: number | undefined;
            borderBottomRightRadius?: number | undefined;
            borderTopLeftRadius?: number | undefined;
            borderTopRightRadius?: number | undefined;
            debouncedPressTime?: number | undefined;
            borderLeftBottomRadius?: number | undefined;
            progressLoadingTime?: number | undefined;
            extra?: any;
            disabled?: boolean | undefined;
            height?: number | undefined;
            hitSlop?: number | import("react-native").Insets | null | undefined;
            paddingHorizontal?: number | undefined;
            paddingTop?: number | undefined;
            progress?: boolean | undefined;
            before?: import("react").ReactNode;
            dangerouslySetPressableProps?: import("react-native").PressableProps | undefined;
            after?: import("react").ReactNode;
            paddingBottom?: number | undefined;
            raiseLevel?: number | undefined;
            springRelease?: boolean | undefined;
            stretch?: boolean | undefined;
            style?: any;
            textFontFamily?: string | undefined;
            textLineHeight?: number | undefined;
            textSize?: number | undefined;
            width?: number | null | undefined;
            children?: import("react").ReactNode;
            onPress?: ((callback?: (() => void) | undefined) => void) | undefined;
            onLongPress?: ((event: import("react-native").GestureResponderEvent) => void) | null | undefined;
            onPressIn?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressOut?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
            onPressedIn?: (() => void) | undefined;
            onPressedOut?: (() => void) | undefined;
            onProgressStart?: (() => void) | undefined;
            onProgressEnd?: (() => void) | undefined;
        };
        flat: {
            backgroundColor: string;
            backgroundDarker: string;
            backgroundShadow: string;
            raiseLevel: number;
            borderRadius: number;
        };
    };
    size: {
        icon: {
            width: number;
            height: number;
            textSize: number;
            paddingHorizontal: number;
        };
        small: {
            width: number;
            height: number;
            textSize: number;
        };
        medium: {
            width: number;
            height: number;
        };
        large: {
            width: number;
            height: number;
            textSize: number;
        };
    };
};
export default _default;

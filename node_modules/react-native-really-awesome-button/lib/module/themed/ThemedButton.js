function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from 'react';
import AwesomeButton from '../Button';
import getTheme from './themes';
function Themed(_ref) {
  let {
    disabled,
    index = null,
    config,
    name = null,
    transparent = false,
    type = 'primary',
    size = 'medium',
    ...extra
  } = _ref;
  const theme = config || getTheme(index, name);
  const styles = disabled ? theme.buttons.disabled : theme.buttons[type];
  const sizeObj = size ? theme.size[size] : {};
  return /*#__PURE__*/React.createElement(AwesomeButton, _extends({}, styles, sizeObj, {
    disabled: disabled
  }, extra));
}
export default Themed;
//# sourceMappingURL=ThemedButton.js.map